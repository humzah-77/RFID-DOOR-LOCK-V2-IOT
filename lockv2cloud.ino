// DHT sensor library - Version: Latest 
/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  Arduino IoT Cloud Variables description
  The following variables are automatically generated and updated when changes are made to the Thing

  String message;
  CloudLength sensor;
  int temp;
  int humid;
  bool lock;
  bool openlock;
  bool adding;
  bool removing;
  CloudLight light;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"//cloud variables 
String words;//for arduino cloud messenger widget to send data

void setup() {
  Serial.begin(9600); // // Serial Communication is starting with 9600 of baudrate speed
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  // Defined in thingProperties.h
  initProperties();
  pinMode(3, OUTPUT);//tell lock board to open lock
  pinMode(2, INPUT);//lock borad tells if lock has been opened or not 
  pinMode(4, OUTPUT);//puts lock board into adding mode
  pinMode(5, OUTPUT);//puts lock into removing mode
  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}


void loop() {
  ArduinoCloud.update();
  if (digitalRead(2) == 1){//if lock board sends a 1
    lock = true;// change lock value to true for widget
    Serial.print("opened");
    delay(100);
    words = "door opened";
    message = words;//log the opeing into the messenger widget will store for 6 months
    delay(100);
    //Serial.print("opened door");
  } 
  else{
    if (lock){//if it goes from 1 to 0
      lock = false;//set lock widget to false 
      words = "door Closed";
      message = words;//log that the lock has closed
      delay(100);
    }
  }
  

  
  
}

void onMessageChange()  {
  // Add your code here to act upon Message change
}

void onLockChange()  {
  // Add your code here to act upon Lock change
}

/*
  Since Openlock is READ_WRITE variable, onOpenlockChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onOpenlockChange()  {
  // Add your code here to act upon Openlock change
  if(openlock){
    digitalWrite(3,HIGH);//write to lock board to open lock
  }
  else{
    digitalWrite(3,LOW);//write to lock board to close lock
  }
}

/*
  Since Adding is READ_WRITE variable, onAddingChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onAddingChange()  {
  // Add your code here to act upon Adding change
  digitalWrite(4,HIGH);//tells lock board to go into adding mode
  delay(100);
  digitalWrite(4,LOW);
  words = "Card Added";//log in messenger that adding mode was initiated 
  message = words;
}

/*
  Since Removing is READ_WRITE variable, onRemovingChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onRemovingChange()  {
  // Add your code here to act upon Removing change
  digitalWrite(5,HIGH);//tell lock board to go into removing mode
  delay(100);
  digitalWrite(5,LOW);
  words = "Card removed";// log that removing mode was activated
  message = words;
}
